name: Coding Standart
on: [pull_request]
jobs:
    # Check there is no syntax errors in the project
    php-linter:
        name: PHP Syntax check 5.6|7.2|7.3|7.4|8.0|8.1
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2.0.0

            - name: PHP syntax checker 5.6
              uses: prestashop/github-action-php-lint/5.6@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

            - name: PHP syntax checker 7.2
              uses: prestashop/github-action-php-lint/7.2@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

            - name: PHP syntax checker 7.3
              uses: prestashop/github-action-php-lint/7.3@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

            - name: PHP syntax checker 7.4
              uses: prestashop/github-action-php-lint/7.4@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

            - name: PHP syntax checker 8.0
              uses: prestashop/github-action-php-lint/8.0@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

            - name: PHP syntax checker 8.1
              uses: prestashop/github-action-php-lint/8.1@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

    # Check the PHP code follow the coding standards
    php-cs-fixer:
        name: PHP-CS-Fixer
        runs-on: ubuntu-latest
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                    php-version: '7.4'

            - name: Checkout
              uses: actions/checkout@v2.0.0

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                path: vendor
                key: php-${{ hashFiles('composer.lock') }}

            - name: Install dependencies
              run: composer update

            - name: Run PHP-CS-Fixer
              run: ./vendor/bin/php-cs-fixer fix --dry-run --diff --using-cache=no

    # Run PHPStan against the module and a PrestaShop release
    phpstan:
      name: PHPStan
      runs-on: ubuntu-latest
      strategy:
        matrix:
          include:
            - presta-versions: '1.7.4.0'
              phpstan-image: 'phpstan/phpstan'
              phpstan-tag: '0.12'
            - presta-versions: '8.0.4'
              phpstan-image: 'phpstan/phpstan'
              phpstan-tag: '0.12'
            - presta-versions: 'latest'
              phpstan-image: 'ghcr.io/phpstan/phpstan'
              phpstan-tag: '1-php8.1'
      steps:
        - name: Checkout
          uses: actions/checkout@v2.0.0

        - name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
            php-version: '7.4'
            coverage: none

        - name: Cache vendor folder
          uses: actions/cache@v4
          with:
            path: vendor
            key: php-${{ hashFiles('composer.lock') }}

        - name: Cache composer folder
          uses: actions/cache@v4
          with:
            path: ~/.composer/cache
            key: php-composer-cache

        - run: composer update

        # Run PrestaShop container (detached) with a named volume
        - name: Pull PrestaShop files (Tag ${{ matrix.presta-versions }})
          run: docker run -tid -v ps-volume:/var/www/html --name temp-ps prestashop/prestashop:${{ matrix.presta-versions }}

        # Fix for PrestaShop 9+: ensure cache stub exists
        - name: Fix missing PS cache stub
          run: docker exec temp-ps mkdir -p /var/www/html/var/cache/prod && docker exec temp-ps touch /var/www/html/var/cache/prod/class_stub.php

        # Clear previous module copy
        - name: Clear previous module
          run: docker exec -t temp-ps rm -rf /var/www/html/modules/paypal

        - name: Run PHPStan
          run: |
            docker run --rm \
              --volumes-from temp-ps \
              -v $PWD:/var/www/html/modules/paypal \
              -e _PS_ROOT_DIR_=/var/www/html \
              --workdir=/var/www/html/modules/paypal \
              ${{ matrix.phpstan-image }}:${{ matrix.phpstan-tag }} analyse \
              --configuration=/var/www/html/modules/paypal/202/phpstan/phpstan.neon

        - name: Cleanup
          if: always()
          run: docker rm -f temp-ps || true
